{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./FrontEnd/app.js","webpack:///./FrontEnd/services/RecipeService.js","webpack:///./FrontEnd/styles/app.css"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;ACjFA,mBAAO,CAAC,mDAAkB;;AAE2B;;AAErD;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA,8BAA8B,+DAAa;AAC3C;;AAEA,uBAAuB;;AAEvB,CAAC,E;;;;;;;;;;;;;;AC5BD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,uB;AACA,+CAA+C;AAC/C,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,wCAAwC,SAAS,GAAG,SAAS,IAAI;AACjE;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;AC7D7B,uC","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./FrontEnd/app.js\");\n","\r\nrequire('./styles/app.css');\r\n\r\nimport RecipeService from './services/RecipeService'; // Podemos hacer esto gracias a Webpack.\r\n\r\n// Aqui se obtiene por el id del formulario todos los datos que ingresa el usuario a traves de los inputs del Form en el index.html.\r\ndocument.getElementById('recipe-form')\r\n    .addEventListener('submit', e => { // Funcion flecha.\r\n    const title = document.getElementById('title').value;\r\n    const ingredients = document.getElementById('ingredients').value;\r\n    const instructions = document.getElementById('instructions').value;\r\n    const image = document.getElementById('image').files;\r\n\r\n    console.log(title, ingredients, instructions, image);\r\n\r\n    // Los datos de la receta se quieren enviar por post, pero este metodo en RecipeService\r\n    // solo recibe un objeto por parametro, por lo tanto se crea un Formdata para poder enviarlo a partir \r\n    // de los datos recopilados por getElementById de arriba.\r\n    const formData = new FormData(); // Es un formulario virtual de JS.\r\n    formData.append('image', image[0]);\r\n    formData.append('title', title);\r\n    formData.append('ingredients', ingredients);\r\n    formData.append('instructions', instructions);\r\n\r\n    const recipeService = new RecipeService();\r\n    recipeService.postRecipe(formData);\r\n\r\n    e.preventDefault(); // Cuando se envia el formulario ya no se reinicia.\r\n\r\n});","\r\n/**\r\n * Clase con metodos para reutilizar.\r\n */\r\nclass RecipeService {\r\n\r\n    /**\r\n     * Constructor tipico de una clase que se ejecuta\r\n     * cuando la clase se instancia.   \r\n     */\r\n    constructor() {\r\n        this.URI = 'http://localhost:3000/api/recipes'; // Direccion de donde esta mi API.\r\n    }\r\n\r\n    /**\r\n     * Este metodo hace una peticion get a localhost:3000/api/recipes\r\n     * para obtener datos.\r\n     * Esto puede tardar tiempo por lo que se hace el metodo async.\r\n     */\r\n    async getRecipe() { \r\n        const response = await fetch(this.URI); // Peticion get al backend que devuelve string.\r\n        const recipes = await response.json(); // Conversion de ese string a JSON.\r\n        return recipes;\r\n    }\r\n\r\n    /**\r\n     * Este metodo envia una peticion post al backend.\r\n     * Debe recibir los datos que se van a enviar al backend para que los guarde.\r\n     * @param {*} recipe \r\n     */\r\n    async postRecipe(recipe) {\r\n        // En este fetch coloco los header para decirle al backend que es lo que estoy enviando.\r\n        const response = await fetch(this.URI, {\r\n            method: 'POST',\r\n            body: recipe\r\n        });\r\n        const data = await response.json();\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    /**\r\n     * Este metodo elimina la receta en el backend.\r\n     * Se le manda por parametro el id de la receta para que lo encuentre, igual\r\n     * que en el recipes.js de routes en el backend.\r\n     * Esto porque desde el frontend se debe enviar el id que se quiere eliminar.\r\n     * @param {*} recipeId \r\n     */\r\n    async deleteRecipe(recipeId) {\r\n        const response = await fetch(`${this.URI}/${recipeId}`, { // Esto lo envia al backend\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport default RecipeService;\r\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}